color = "grey50", alpha = 0.75) +
stat_summary(aes(x = parameter, y = N2_eql), fun.y = mean,
fun.ymin = function(x) mean(x) - sd(x),
fun.ymax = function(x) mean(x) + sd(x),
geom = "pointrange", color = "red") +
labs(x = "Focal parameter", y = expression(Relative~abundance~of~N[2]),
title = glue::glue("Focal parameter: +{pchange_focal_par}% \n Non-focal parameters: ±{pchange_nonfocal_par}%")) +
scale_x_discrete(labels = x_labels[pars_order$No]) +
scale_y_continuous(expand = c(0.05, 0), limits = c(0, 0.4)) +
theme_classic() +
theme(axis.line.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.x = element_text(color = "black", size = 12),
axis.text.y = element_text(color = "black", size = 14),
plot.title = element_text(hjust = 0.5, size = 16),
axis.title.x = element_text(size = 15, margin = margin(t = 10)),
axis.title.y = element_text(size = 15, margin = margin(r = 8))) +
annotate(geom = "text", x = 0.7, y = 0.3, label = "No microbial effects")
}
### Visualize the simulation results
BH_sens_FE_HO <- BH_sensitivity_FE_HO()
plot_sim_one_par_relabd(dat = BH_sens_FE_HO,
pchange_focal_par = 40,
pchange_nonfocal_par = 5)
ggplot(data = dat$pars_sens_df) +
geom_hline(yintercept = dat$N2_equl_default, color = "grey60", linetype = "dashed", size = 1) +
geom_hline(yintercept = dat$N2_equl_all_increase, color = "blue", linetype = "dashed", size = 1) +
geom_point(aes(x = parameter, y = N2_eql), position = position_jitter(width = 0.1),
color = "grey50", alpha = 0.75) +
stat_summary(aes(x = parameter, y = N2_eql), fun.y = mean,
fun.ymin = function(x) mean(x) - sd(x),
fun.ymax = function(x) mean(x) + sd(x),
geom = "pointrange", color = "red") +
labs(x = "Focal parameter", y = expression(Relative~abundance~of~N[2]),
title = glue::glue("Focal parameter: +{pchange_focal_par}% \n Non-focal parameters: ±{pchange_nonfocal_par}%")) +
scale_x_discrete(labels = x_labels[pars_order$No]) +
scale_y_continuous(expand = c(0.05, 0), limits = c(0, 0.4)) +
theme_classic() +
theme(axis.line.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.x = element_text(color = "black", size = 12),
axis.text.y = element_text(color = "black", size = 14),
plot.title = element_text(hjust = 0.5, size = 16),
axis.title.x = element_text(size = 15, margin = margin(t = 10)),
axis.title.y = element_text(size = 15, margin = margin(r = 8))) +
annotate(geom = "text", x = 4.5, y = 0.13, label = "No microbial effects")
### Plot function
plot_sim_one_par_relabd <- function(dat, pchange_focal_par, pchange_nonfocal_par){
pars_order <- dat$pars_sens_df %>%
group_by(parameter) %>%
summarise(mean = mean(N2_eql)) %>%
mutate(No = 1:5) %>%
arrange(desc(mean))
dat$pars_sens_df <- dat$pars_sens_df %>%
mutate(parameter = factor(parameter, level = pars_order$parameter, ordered = T))
x_labels <- c(expression(italic(alpha[21])),
expression(italic(alpha[22])),
expression(italic(g[2])),
expression(italic(lambda[2])),
expression(italic(s[2])))
ggplot(data = dat$pars_sens_df) +
geom_hline(yintercept = dat$N2_equl_default, color = "grey60", linetype = "dashed", size = 1) +
geom_hline(yintercept = dat$N2_equl_all_increase, color = "blue", linetype = "dashed", size = 1) +
geom_point(aes(x = parameter, y = N2_eql), position = position_jitter(width = 0.1),
color = "grey50", alpha = 0.75) +
stat_summary(aes(x = parameter, y = N2_eql), fun.y = mean,
fun.ymin = function(x) mean(x) - sd(x),
fun.ymax = function(x) mean(x) + sd(x),
geom = "pointrange", color = "red") +
labs(x = "Focal parameter", y = expression(Relative~abundance~of~N[2]),
title = glue::glue("Focal parameter: +{pchange_focal_par}% \n Non-focal parameters: ±{pchange_nonfocal_par}%")) +
scale_x_discrete(labels = x_labels[pars_order$No]) +
scale_y_continuous(expand = c(0.05, 0), limits = c(0, 0.4)) +
theme_classic() +
theme(axis.line.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.x = element_text(color = "black", size = 12),
axis.text.y = element_text(color = "black", size = 14),
plot.title = element_text(hjust = 0.5, size = 16),
axis.title.x = element_text(size = 15, margin = margin(t = 10)),
axis.title.y = element_text(size = 15, margin = margin(r = 8))) +
annotate(geom = "text", x = 4.5, y = 0.13, label = "No microbial effects")
}
### Visualize the simulation results
BH_sens_FE_HO <- BH_sensitivity_FE_HO()
plot_sim_one_par_relabd(dat = BH_sens_FE_HO,
pchange_focal_par = 40,
pchange_nonfocal_par = 5)
ggsave("./Outputs/BH_sens_FE_HO.pdf", width = 5, height = 3.8)
### Plot function
plot_sim_one_par_relabd <- function(dat, pchange_focal_par, pchange_nonfocal_par){
pars_order <- dat$pars_sens_df %>%
group_by(parameter) %>%
summarise(mean = mean(N2_eql)) %>%
mutate(No = 1:5) %>%
arrange(desc(mean))
dat$pars_sens_df <- dat$pars_sens_df %>%
mutate(parameter = factor(parameter, level = pars_order$parameter, ordered = T))
x_labels <- c(expression(italic(alpha[21])),
expression(italic(alpha[22])),
expression(italic(g[2])),
expression(italic(lambda[2])),
expression(italic(s[2])))
ggplot(data = dat$pars_sens_df) +
geom_hline(yintercept = dat$N2_equl_default, color = "grey60", linetype = "dashed", size = 1) +
geom_hline(yintercept = dat$N2_equl_all_increase, color = "blue", linetype = "dashed", size = 1) +
geom_point(aes(x = parameter, y = N2_eql), position = position_jitter(width = 0.1),
color = "grey50", alpha = 0.75) +
stat_summary(aes(x = parameter, y = N2_eql), fun.y = mean,
fun.ymin = function(x) mean(x) - sd(x),
fun.ymax = function(x) mean(x) + sd(x),
geom = "pointrange", color = "red") +
labs(x = "Focal parameter", y = expression(Relative~abundance~of~N[2]),
title = glue::glue("Focal parameter: +{pchange_focal_par}% \n Non-focal parameters: ±{pchange_nonfocal_par}%")) +
scale_x_discrete(labels = x_labels[pars_order$No]) +
scale_y_continuous(expand = c(0.05, 0), limits = c(0, 0.4)) +
theme_classic() +
theme(axis.line.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.x = element_text(color = "black", size = 12),
axis.text.y = element_text(color = "black", size = 14),
plot.title = element_text(hjust = 0.5, size = 16),
axis.title.x = element_text(size = 15, margin = margin(t = 10)),
axis.title.y = element_text(size = 15, margin = margin(r = 8))) +
annotate(geom = "text", x = 4.5, y = 0.15, label = "No microbial effects")
}
### Visualize the simulation results
BH_sens_FE_HO <- BH_sensitivity_FE_HO()
plot_sim_one_par_relabd(dat = BH_sens_FE_HO,
pchange_focal_par = 40,
pchange_nonfocal_par = 5)
ggsave("./Outputs/BH_sens_FE_HO.pdf", width = 5, height = 3.8)
ggsave("./Outputs/BH_sens_FE_HO.pdf", width = 5, height = 3.8)
}
### Plot function
plot_sim_one_par_relabd <- function(dat, pchange_focal_par, pchange_nonfocal_par){
pars_order <- dat$pars_sens_df %>%
group_by(parameter) %>%
summarise(mean = mean(N2_eql)) %>%
mutate(No = 1:5) %>%
arrange(desc(mean))
dat$pars_sens_df <- dat$pars_sens_df %>%
mutate(parameter = factor(parameter, level = pars_order$parameter, ordered = T))
x_labels <- c(expression(italic(alpha[21])),
expression(italic(alpha[22])),
expression(italic(g[2])),
expression(italic(lambda[2])),
expression(italic(s[2])))
ggplot(data = dat$pars_sens_df) +
geom_hline(yintercept = dat$N2_equl_default, color = "grey60", linetype = "dashed", size = 1) +
geom_hline(yintercept = dat$N2_equl_all_increase, color = "blue", linetype = "dashed", size = 1) +
geom_point(aes(x = parameter, y = N2_eql), position = position_jitter(width = 0.1),
color = "grey50", alpha = 0.75) +
stat_summary(aes(x = parameter, y = N2_eql), fun.y = mean,
fun.ymin = function(x) mean(x) - sd(x),
fun.ymax = function(x) mean(x) + sd(x),
geom = "pointrange", color = "red") +
labs(x = "Focal parameter", y = expression(Relative~abundance~of~N[2]),
title = glue::glue("Focal parameter: +{pchange_focal_par}% \n Non-focal parameters: ±{pchange_nonfocal_par}%")) +
scale_x_discrete(labels = x_labels[pars_order$No]) +
scale_y_continuous(expand = c(0.05, 0), limits = c(0, 0.4)) +
theme_classic() +
theme(axis.line.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.x = element_text(color = "black", size = 12),
axis.text.y = element_text(color = "black", size = 14),
plot.title = element_text(hjust = 0.5, size = 16),
axis.title.x = element_text(size = 15, margin = margin(t = 10)),
axis.title.y = element_text(size = 15, margin = margin(r = 8))) +
annotate(geom = "text", x = 4.5, y = 0.15, label = "No microbial effects") +
annotate(geom = "text", x = 4.5, y = 0.25, label = expression(Microbial~effects~on~/n~all~N[2]~parameters))
### Plot function
plot_sim_one_par_relabd <- function(dat, pchange_focal_par, pchange_nonfocal_par){
pars_order <- dat$pars_sens_df %>%
group_by(parameter) %>%
summarise(mean = mean(N2_eql)) %>%
mutate(No = 1:5) %>%
arrange(desc(mean))
dat$pars_sens_df <- dat$pars_sens_df %>%
mutate(parameter = factor(parameter, level = pars_order$parameter, ordered = T))
x_labels <- c(expression(italic(alpha[21])),
expression(italic(alpha[22])),
expression(italic(g[2])),
expression(italic(lambda[2])),
expression(italic(s[2])))
ggplot(data = dat$pars_sens_df) +
geom_hline(yintercept = dat$N2_equl_default, color = "grey60", linetype = "dashed", size = 1) +
geom_hline(yintercept = dat$N2_equl_all_increase, color = "blue", linetype = "dashed", size = 1) +
geom_point(aes(x = parameter, y = N2_eql), position = position_jitter(width = 0.1),
color = "grey50", alpha = 0.75) +
stat_summary(aes(x = parameter, y = N2_eql), fun.y = mean,
fun.ymin = function(x) mean(x) - sd(x),
fun.ymax = function(x) mean(x) + sd(x),
geom = "pointrange", color = "red") +
labs(x = "Focal parameter", y = expression(Relative~abundance~of~N[2]),
title = glue::glue("Focal parameter: +{pchange_focal_par}% \n Non-focal parameters: ±{pchange_nonfocal_par}%")) +
scale_x_discrete(labels = x_labels[pars_order$No]) +
scale_y_continuous(expand = c(0.05, 0), limits = c(0, 0.4)) +
theme_classic() +
theme(axis.line.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.x = element_text(color = "black", size = 12),
axis.text.y = element_text(color = "black", size = 14),
plot.title = element_text(hjust = 0.5, size = 16),
axis.title.x = element_text(size = 15, margin = margin(t = 10)),
axis.title.y = element_text(size = 15, margin = margin(r = 8))) +
annotate(geom = "text", x = 4.5, y = 0.15, label = "No microbial effects") +
annotate(geom = "text", x = 4.5, y = 0.25, label = expression(Microbial~effects~on~/n~all~N[2]~parameters))
### Plot function
plot_sim_one_par_relabd <- function(dat, pchange_focal_par, pchange_nonfocal_par){
pars_order <- dat$pars_sens_df %>%
group_by(parameter) %>%
summarise(mean = mean(N2_eql)) %>%
mutate(No = 1:5) %>%
arrange(desc(mean))
dat$pars_sens_df <- dat$pars_sens_df %>%
mutate(parameter = factor(parameter, level = pars_order$parameter, ordered = T))
x_labels <- c(expression(italic(alpha[21])),
expression(italic(alpha[22])),
expression(italic(g[2])),
expression(italic(lambda[2])),
expression(italic(s[2])))
ggplot(data = dat$pars_sens_df) +
geom_hline(yintercept = dat$N2_equl_default, color = "grey60", linetype = "dashed", size = 1) +
geom_hline(yintercept = dat$N2_equl_all_increase, color = "blue", linetype = "dashed", size = 1) +
geom_point(aes(x = parameter, y = N2_eql), position = position_jitter(width = 0.1),
color = "grey50", alpha = 0.75) +
stat_summary(aes(x = parameter, y = N2_eql), fun.y = mean,
fun.ymin = function(x) mean(x) - sd(x),
fun.ymax = function(x) mean(x) + sd(x),
geom = "pointrange", color = "red") +
labs(x = "Focal parameter", y = expression(Relative~abundance~of~N[2]),
title = glue::glue("Focal parameter: +{pchange_focal_par}% \n Non-focal parameters: ±{pchange_nonfocal_par}%")) +
scale_x_discrete(labels = x_labels[pars_order$No]) +
scale_y_continuous(expand = c(0.05, 0), limits = c(0, 0.4)) +
theme_classic() +
theme(axis.line.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.x = element_text(color = "black", size = 12),
axis.text.y = element_text(color = "black", size = 14),
plot.title = element_text(hjust = 0.5, size = 16),
axis.title.x = element_text(size = 15, margin = margin(t = 10)),
axis.title.y = element_text(size = 15, margin = margin(r = 8))) +
annotate(geom = "text", x = 4.5, y = 0.15, label = "No microbial effects") +
annotate(geom = "text", x = 4.5, y = 0.25, label = expression(Microbial~effects~on~all~N[2]~parameters))
}
### Visualize the simulation results
BH_sens_FE_HO <- BH_sensitivity_FE_HO()
plot_sim_one_par_relabd(dat = BH_sens_FE_HO,
pchange_focal_par = 40,
pchange_nonfocal_par = 5)
ggsave("./Outputs/BH_sens_FE_HO.pdf", width = 5, height = 3.8)
{
pars_order <- dat$pars_sens_df %>%
group_by(parameter) %>%
summarise(mean = mean(N2_eql)) %>%
mutate(No = 1:5) %>%
arrange(desc(mean))
dat$pars_sens_df <- dat$pars_sens_df %>%
mutate(parameter = factor(parameter, level = pars_order$parameter, ordered = T))
x_labels <- c(expression(italic(alpha[21])),
expression(italic(alpha[22])),
expression(italic(g[2])),
expression(italic(lambda[2])),
expression(italic(s[2])))
ggplot(data = dat$pars_sens_df) +
geom_hline(yintercept = dat$N2_equl_default, color = "grey60", linetype = "dashed", size = 1) +
geom_hline(yintercept = dat$N2_equl_all_increase, color = "blue", linetype = "dashed", size = 1) +
geom_point(aes(x = parameter, y = N2_eql), position = position_jitter(width = 0.1),
color = "grey50", alpha = 0.75) +
stat_summary(aes(x = parameter, y = N2_eql), fun.y = mean,
fun.ymin = function(x) mean(x) - sd(x),
fun.ymax = function(x) mean(x) + sd(x),
geom = "pointrange", color = "red") +
labs(x = "Focal parameter", y = expression(Relative~abundance~of~N[2]),
title = glue::glue("Focal parameter: +{pchange_focal_par}% \n Non-focal parameters: ±{pchange_nonfocal_par}%")) +
scale_x_discrete(labels = x_labels[pars_order$No]) +
scale_y_continuous(expand = c(0.05, 0), limits = c(0, 0.4)) +
theme_classic() +
theme(axis.line.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.x = element_text(color = "black", size = 12),
axis.text.y = element_text(color = "black", size = 14),
plot.title = element_text(hjust = 0.5, size = 16),
axis.title.x = element_text(size = 15, margin = margin(t = 10)),
axis.title.y = element_text(size = 15, margin = margin(r = 8))) +
annotate(geom = "text", x = 4.5, y = 0.15, label = "No microbial effects") +
annotate(geom = "text", x = 4.5, y = 0.25, label = expression(Microbial~effects~on~all~N[2]~parameters)) +
annotate(geom = "text", x = 4.5, y = 0.35, label = expression(atop("Histogram of "*hat(mu), Bootstrap~samples*','~Allianz)))
}
### Plot function
plot_sim_one_par_relabd <- function(dat, pchange_focal_par, pchange_nonfocal_par){
pars_order <- dat$pars_sens_df %>%
group_by(parameter) %>%
summarise(mean = mean(N2_eql)) %>%
mutate(No = 1:5) %>%
arrange(desc(mean))
dat$pars_sens_df <- dat$pars_sens_df %>%
mutate(parameter = factor(parameter, level = pars_order$parameter, ordered = T))
x_labels <- c(expression(italic(alpha[21])),
expression(italic(alpha[22])),
expression(italic(g[2])),
expression(italic(lambda[2])),
expression(italic(s[2])))
ggplot(data = dat$pars_sens_df) +
geom_hline(yintercept = dat$N2_equl_default, color = "grey60", linetype = "dashed", size = 1) +
geom_hline(yintercept = dat$N2_equl_all_increase, color = "blue", linetype = "dashed", size = 1) +
geom_point(aes(x = parameter, y = N2_eql), position = position_jitter(width = 0.1),
color = "grey50", alpha = 0.75) +
stat_summary(aes(x = parameter, y = N2_eql), fun.y = mean,
fun.ymin = function(x) mean(x) - sd(x),
fun.ymax = function(x) mean(x) + sd(x),
geom = "pointrange", color = "red") +
labs(x = "Focal parameter", y = expression(Relative~abundance~of~N[2]),
title = glue::glue("Focal parameter: +{pchange_focal_par}% \n Non-focal parameters: ±{pchange_nonfocal_par}%")) +
scale_x_discrete(labels = x_labels[pars_order$No]) +
scale_y_continuous(expand = c(0.05, 0), limits = c(0, 0.4)) +
theme_classic() +
theme(axis.line.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.x = element_text(color = "black", size = 12),
axis.text.y = element_text(color = "black", size = 14),
plot.title = element_text(hjust = 0.5, size = 16),
axis.title.x = element_text(size = 15, margin = margin(t = 10)),
axis.title.y = element_text(size = 15, margin = margin(r = 8))) +
annotate(geom = "text", x = 4.5, y = 0.15, label = "No microbial effects") +
annotate(geom = "text", x = 4.5, y = 0.25, label = expression(Microbial~effects~on~all~N[2]~parameters)) +
annotate(geom = "text", x = 4.5, y = 0.35, label = expression(atop("Histogram of "*hat(mu), Bootstrap~samples*','~Allianz)))
}
### Visualize the simulation results
BH_sens_FE_HO <- BH_sensitivity_FE_HO()
plot_sim_one_par_relabd(dat = BH_sens_FE_HO,
pchange_focal_par = 40,
pchange_nonfocal_par = 5)
### Plot function
plot_sim_one_par_relabd <- function(dat, pchange_focal_par, pchange_nonfocal_par){
pars_order <- dat$pars_sens_df %>%
group_by(parameter) %>%
summarise(mean = mean(N2_eql)) %>%
mutate(No = 1:5) %>%
arrange(desc(mean))
dat$pars_sens_df <- dat$pars_sens_df %>%
mutate(parameter = factor(parameter, level = pars_order$parameter, ordered = T))
x_labels <- c(expression(italic(alpha[21])),
expression(italic(alpha[22])),
expression(italic(g[2])),
expression(italic(lambda[2])),
expression(italic(s[2])))
ggplot(data = dat$pars_sens_df) +
geom_hline(yintercept = dat$N2_equl_default, color = "grey60", linetype = "dashed", size = 1) +
geom_hline(yintercept = dat$N2_equl_all_increase, color = "blue", linetype = "dashed", size = 1) +
geom_point(aes(x = parameter, y = N2_eql), position = position_jitter(width = 0.1),
color = "grey50", alpha = 0.75) +
stat_summary(aes(x = parameter, y = N2_eql), fun.y = mean,
fun.ymin = function(x) mean(x) - sd(x),
fun.ymax = function(x) mean(x) + sd(x),
geom = "pointrange", color = "red") +
labs(x = "Focal parameter", y = expression(Relative~abundance~of~N[2]),
title = glue::glue("Focal parameter: +{pchange_focal_par}% \n Non-focal parameters: ±{pchange_nonfocal_par}%")) +
scale_x_discrete(labels = x_labels[pars_order$No]) +
scale_y_continuous(expand = c(0.05, 0), limits = c(0, 0.4)) +
theme_classic() +
theme(axis.line.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.x = element_text(color = "black", size = 12),
axis.text.y = element_text(color = "black", size = 14),
plot.title = element_text(hjust = 0.5, size = 16),
axis.title.x = element_text(size = 15, margin = margin(t = 10)),
axis.title.y = element_text(size = 15, margin = margin(r = 8))) +
annotate(geom = "text", x = 4.5, y = 0.15, label = "No microbial effects") +
annotate(geom = "text", x = 4.5, y = 0.25, label = "Microbial effects on") +
annotate(geom = "text", x = 4.5, y = 0.27, label = expression(all~N[2]~parameters))
}
### Visualize the simulation results
BH_sens_FE_HO <- BH_sensitivity_FE_HO()
plot_sim_one_par_relabd(dat = BH_sens_FE_HO,
pchange_focal_par = 40,
pchange_nonfocal_par = 5)
### Plot function
plot_sim_one_par_relabd <- function(dat, pchange_focal_par, pchange_nonfocal_par){
pars_order <- dat$pars_sens_df %>%
group_by(parameter) %>%
summarise(mean = mean(N2_eql)) %>%
mutate(No = 1:5) %>%
arrange(desc(mean))
dat$pars_sens_df <- dat$pars_sens_df %>%
mutate(parameter = factor(parameter, level = pars_order$parameter, ordered = T))
x_labels <- c(expression(italic(alpha[21])),
expression(italic(alpha[22])),
expression(italic(g[2])),
expression(italic(lambda[2])),
expression(italic(s[2])))
ggplot(data = dat$pars_sens_df) +
geom_hline(yintercept = dat$N2_equl_default, color = "grey60", linetype = "dashed", size = 1) +
geom_hline(yintercept = dat$N2_equl_all_increase, color = "blue", linetype = "dashed", size = 1) +
geom_point(aes(x = parameter, y = N2_eql), position = position_jitter(width = 0.1),
color = "grey50", alpha = 0.75) +
stat_summary(aes(x = parameter, y = N2_eql), fun.y = mean,
fun.ymin = function(x) mean(x) - sd(x),
fun.ymax = function(x) mean(x) + sd(x),
geom = "pointrange", color = "red") +
labs(x = "Focal parameter", y = expression(Relative~abundance~of~N[2]),
title = glue::glue("Focal parameter: +{pchange_focal_par}% \n Non-focal parameters: ±{pchange_nonfocal_par}%")) +
scale_x_discrete(labels = x_labels[pars_order$No]) +
scale_y_continuous(expand = c(0.05, 0), limits = c(0, 0.4)) +
theme_classic() +
theme(axis.line.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.x = element_text(color = "black", size = 12),
axis.text.y = element_text(color = "black", size = 14),
plot.title = element_text(hjust = 0.5, size = 16),
axis.title.x = element_text(size = 15, margin = margin(t = 10)),
axis.title.y = element_text(size = 15, margin = margin(r = 8))) +
annotate(geom = "text", x = 4.5, y = 0.15, label = "No microbial effects") +
annotate(geom = "text", x = 4.5, y = 0.27, label = "Microbial effects on") +
annotate(geom = "text", x = 4.5, y = 0.25, label = expression(all~N[2]~parameters))
}
### Visualize the simulation results
BH_sens_FE_HO <- BH_sensitivity_FE_HO()
plot_sim_one_par_relabd(dat = BH_sens_FE_HO,
pchange_focal_par = 40,
pchange_nonfocal_par = 5)
### Plot function
plot_sim_one_par_relabd <- function(dat, pchange_focal_par, pchange_nonfocal_par){
pars_order <- dat$pars_sens_df %>%
group_by(parameter) %>%
summarise(mean = mean(N2_eql)) %>%
mutate(No = 1:5) %>%
arrange(desc(mean))
dat$pars_sens_df <- dat$pars_sens_df %>%
mutate(parameter = factor(parameter, level = pars_order$parameter, ordered = T))
x_labels <- c(expression(italic(alpha[21])),
expression(italic(alpha[22])),
expression(italic(g[2])),
expression(italic(lambda[2])),
expression(italic(s[2])))
ggplot(data = dat$pars_sens_df) +
geom_hline(yintercept = dat$N2_equl_default, color = "grey60", linetype = "dashed", size = 1) +
geom_hline(yintercept = dat$N2_equl_all_increase, color = "blue", linetype = "dashed", size = 1) +
geom_point(aes(x = parameter, y = N2_eql), position = position_jitter(width = 0.1),
color = "grey50", alpha = 0.75) +
stat_summary(aes(x = parameter, y = N2_eql), fun.y = mean,
fun.ymin = function(x) mean(x) - sd(x),
fun.ymax = function(x) mean(x) + sd(x),
geom = "pointrange", color = "red") +
labs(x = "Focal parameter", y = expression(Relative~abundance~of~N[2]),
title = glue::glue("Focal parameter: +{pchange_focal_par}% \n Non-focal parameters: ±{pchange_nonfocal_par}%")) +
scale_x_discrete(labels = x_labels[pars_order$No]) +
scale_y_continuous(expand = c(0.05, 0), limits = c(0, 0.4)) +
theme_classic() +
theme(axis.line.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.x = element_text(color = "black", size = 12),
axis.text.y = element_text(color = "black", size = 14),
plot.title = element_text(hjust = 0.5, size = 16),
axis.title.x = element_text(size = 15, margin = margin(t = 10)),
axis.title.y = element_text(size = 15, margin = margin(r = 8))) +
annotate(geom = "text", x = 4.5, y = 0.15, label = "No microbial effects") +
annotate(geom = "text", x = 4.5, y = 0.27, label = "Microbial effects on") +
annotate(geom = "text", x = 4.5, y = 0.25, label = "all~N[2]~parameters", parse = T)
}
### Visualize the simulation results
BH_sens_FE_HO <- BH_sensitivity_FE_HO()
plot_sim_one_par_relabd(dat = BH_sens_FE_HO,
pchange_focal_par = 40,
pchange_nonfocal_par = 5)
ggsave("./Outputs/BH_sens_FE_HO.pdf", width = 5, height = 3.8)
### Plot function
plot_sim_one_par_relabd <- function(dat, pchange_focal_par, pchange_nonfocal_par){
pars_order <- dat$pars_sens_df %>%
group_by(parameter) %>%
summarise(mean = mean(N2_eql)) %>%
mutate(No = 1:5) %>%
arrange(desc(mean))
dat$pars_sens_df <- dat$pars_sens_df %>%
mutate(parameter = factor(parameter, level = pars_order$parameter, ordered = T))
x_labels <- c(expression(italic(alpha[21])),
expression(italic(alpha[22])),
expression(italic(g[2])),
expression(italic(lambda[2])),
expression(italic(s[2])))
ggplot(data = dat$pars_sens_df) +
geom_hline(yintercept = dat$N2_equl_default, color = "grey60", linetype = "dashed", size = 1) +
geom_hline(yintercept = dat$N2_equl_all_increase, color = "blue", linetype = "dashed", size = 1) +
geom_point(aes(x = parameter, y = N2_eql), position = position_jitter(width = 0.1),
color = "grey50", alpha = 0.75) +
stat_summary(aes(x = parameter, y = N2_eql), fun.y = mean,
fun.ymin = function(x) mean(x) - sd(x),
fun.ymax = function(x) mean(x) + sd(x),
geom = "pointrange", color = "red") +
labs(x = "Focal parameter", y = expression(Relative~abundance~of~N[2]),
title = glue::glue("Focal parameter: +{pchange_focal_par}% \n Non-focal parameters: ±{pchange_nonfocal_par}%")) +
scale_x_discrete(labels = x_labels[pars_order$No]) +
scale_y_continuous(expand = c(0.05, 0), limits = c(0, 0.4)) +
theme_classic() +
theme(axis.line.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.x = element_text(color = "black", size = 12),
axis.text.y = element_text(color = "black", size = 14),
plot.title = element_text(hjust = 0.5, size = 16),
axis.title.x = element_text(size = 15, margin = margin(t = 10)),
axis.title.y = element_text(size = 15, margin = margin(r = 8))) +
annotate(geom = "text", x = 4.5, y = 0.15, label = "No microbial effects") +
annotate(geom = "text", x = 4.5, y = 0.285, label = "Microbial effects on") +
annotate(geom = "text", x = 4.5, y = 0.255, label = "all~N[2]~parameters", parse = T)
}
### Visualize the simulation results
BH_sens_FE_HO <- BH_sensitivity_FE_HO()
plot_sim_one_par_relabd(dat = BH_sens_FE_HO,
pchange_focal_par = 40,
pchange_nonfocal_par = 5)
ggsave("./Outputs/BH_sens_FE_HO.pdf", width = 5, height = 3.8)
