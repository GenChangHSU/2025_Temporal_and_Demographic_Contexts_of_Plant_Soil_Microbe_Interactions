axis.text = element_text(color = "black", size = 12),
plot.title = element_text(hjust = 0.5, size = 14),
axis.title.x = element_text(size = 15, margin = margin(t = 10)),
axis.title.y = element_text(size = 15, margin = margin(r = 8)))
}
### Visualize the simulation results
BH_sens_20_5 <- BH_sensitivity_one_par(pchange_focal_par = 20,
pchange_nonfocal_par = 5,
n_generation = 100,
n_sim = 100)
pars_sens_plot(dat = BH_sens_20_5,
pchange_focal_par = 20,
pchange_nonfocal_par = 5)
ggsave("./Outputs/pars_sens_plot_20_5.tiff", width = 5, height = 4, dpi = 600, device = "tiff")
### A function for visualizing the simulation results
### Arguments:
### dat: outputs returned by BH_sensitivity_one_par()
### pchange_focal_par: percentage of increase in the focal parameter passed to BH_sensitivity_one_par()
### pchange_nonfocal_par: percentage of increase/decrease in the non-focal parameter(s) passed to BH_sensitivity_one_par()
plot_sim_one_par <- function(dat, pchange_focal_par, pchange_nonfocal_par){
# Arrange the parameters by the average N2 abundance of the simulations
pars_order <- dat$pars_sens_df %>%
group_by(parameter) %>%
summarise(mean = mean(N2_eql)) %>%
mutate(No = 1:5) %>%
arrange(desc(mean))
# Reorder the parameter levels for plotting
dat$pars_sens_df <- dat$pars_sens_df %>%
mutate(parameter = factor(parameter, level = pars_order$parameter, ordered = T))
# A vector of x-axis labels
x_labels <- c(expression(italic(alpha[21])),
expression(italic(alpha[22])),
expression(italic(g)),
expression(italic(lambda)),
expression(italic(s)))
# Plot
ggplot(data = dat$pars_sens_df) +
geom_hline(yintercept = dat$N2_equl_default, color = "grey60", linetype = "dashed", size = 1) +
geom_point(aes(x = parameter, y = N2_eql), position = position_jitter(width = 0.1),
color = "grey50", alpha = 0.75) +
stat_summary(aes(x = parameter, y = N2_eql), fun.y = mean,
fun.ymin = function(x) mean(x) - sd(x),
fun.ymax = function(x) mean(x) + sd(x),
geom = "pointrange", color = "red") +
labs(x = "Focal parameters", y = expression(N[2]),
title = glue::glue("Focal parameter: {pchange_focal_par}%, Non-focal parameters: ±{pchange_nonfocal_par}%")) +
scale_x_discrete(labels = x_labels[pars_order$No]) +
scale_y_continuous(expand = c(0.25, 0)) +
theme_classic(base_size = 14) +
theme(axis.line.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text = element_text(color = "black", size = 12),
plot.title = element_text(hjust = 0.5, size = 10),
axis.title.x = element_text(size = 15, margin = margin(t = 10)),
axis.title.y = element_text(size = 15, margin = margin(r = 8)))
}
pars_sens_plot(dat = BH_sens_20_5,
pchange_focal_par = 20,
pchange_nonfocal_par = 5)
ggsave("./Outputs/pars_sens_plot_20_5.tiff", width = 5, height = 4, dpi = 600, device = "tiff")
# Plot
ggplot(data = dat$pars_sens_df) +
geom_hline(yintercept = dat$N2_equl_default, color = "grey60", linetype = "dashed", size = 1) +
geom_point(aes(x = parameter, y = N2_eql), position = position_jitter(width = 0.1),
color = "grey50", alpha = 0.75) +
stat_summary(aes(x = parameter, y = N2_eql), fun.y = mean,
fun.ymin = function(x) mean(x) - sd(x),
fun.ymax = function(x) mean(x) + sd(x),
geom = "pointrange", color = "red") +
labs(x = "Focal parameters", y = expression(N[2]),
title = glue::glue("Focal parameter: {pchange_focal_par}%, Non-focal parameters: ±{pchange_nonfocal_par}%")) +
scale_x_discrete(labels = x_labels[pars_order$No]) +
scale_y_continuous(expand = c(0.25, 0)) +
theme_classic() +
theme(axis.line.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text = element_text(color = "black", size = 12),
plot.title = element_text(hjust = 0.5, size = 14),
axis.title.x = element_text(size = 13, margin = margin(t = 10)),
axis.title.y = element_text(size = 13, margin = margin(r = 8)))
### A function for visualizing the simulation results
### Arguments:
### dat: outputs returned by BH_sensitivity_one_par()
### pchange_focal_par: percentage of increase in the focal parameter passed to BH_sensitivity_one_par()
### pchange_nonfocal_par: percentage of increase/decrease in the non-focal parameter(s) passed to BH_sensitivity_one_par()
plot_sim_one_par <- function(dat, pchange_focal_par, pchange_nonfocal_par){
# Arrange the parameters by the average N2 abundance of the simulations
pars_order <- dat$pars_sens_df %>%
group_by(parameter) %>%
summarise(mean = mean(N2_eql)) %>%
mutate(No = 1:5) %>%
arrange(desc(mean))
# Reorder the parameter levels for plotting
dat$pars_sens_df <- dat$pars_sens_df %>%
mutate(parameter = factor(parameter, level = pars_order$parameter, ordered = T))
# A vector of x-axis labels
x_labels <- c(expression(italic(alpha[21])),
expression(italic(alpha[22])),
expression(italic(g)),
expression(italic(lambda)),
expression(italic(s)))
# Plot
ggplot(data = dat$pars_sens_df) +
geom_hline(yintercept = dat$N2_equl_default, color = "grey60", linetype = "dashed", size = 1) +
geom_point(aes(x = parameter, y = N2_eql), position = position_jitter(width = 0.1),
color = "grey50", alpha = 0.75) +
stat_summary(aes(x = parameter, y = N2_eql), fun.y = mean,
fun.ymin = function(x) mean(x) - sd(x),
fun.ymax = function(x) mean(x) + sd(x),
geom = "pointrange", color = "red") +
labs(x = "Focal parameters", y = expression(N[2]),
title = glue::glue("Focal parameter: {pchange_focal_par}%, Non-focal parameters: ±{pchange_nonfocal_par}%")) +
scale_x_discrete(labels = x_labels[pars_order$No]) +
scale_y_continuous(expand = c(0.25, 0)) +
theme_classic() +
theme(axis.line.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text = element_text(color = "black", size = 12),
plot.title = element_text(hjust = 0.5, size = 14),
axis.title.x = element_text(size = 13, margin = margin(t = 10)),
axis.title.y = element_text(size = 13, margin = margin(r = 8)))
}
pars_sens_plot(dat = BH_sens_20_5,
pchange_focal_par = 20,
pchange_nonfocal_par = 5)
ggsave("./Outputs/pars_sens_plot_20_5.tiff", width = 5, height = 4, dpi = 600, device = "tiff")
### A function for visualizing the simulation results
### Arguments:
### dat: outputs returned by BH_sensitivity_one_par()
### pchange_focal_par: percentage of increase in the focal parameter passed to BH_sensitivity_one_par()
### pchange_nonfocal_par: percentage of increase/decrease in the non-focal parameter(s) passed to BH_sensitivity_one_par()
plot_sim_one_par <- function(dat, pchange_focal_par, pchange_nonfocal_par){
# Arrange the parameters by the average N2 abundance of the simulations
pars_order <- dat$pars_sens_df %>%
group_by(parameter) %>%
summarise(mean = mean(N2_eql)) %>%
mutate(No = 1:5) %>%
arrange(desc(mean))
# Reorder the parameter levels for plotting
dat$pars_sens_df <- dat$pars_sens_df %>%
mutate(parameter = factor(parameter, level = pars_order$parameter, ordered = T))
# A vector of x-axis labels
x_labels <- c(expression(italic(alpha[21])),
expression(italic(alpha[22])),
expression(italic(g)),
expression(italic(lambda)),
expression(italic(s)))
# Plot
ggplot(data = dat$pars_sens_df) +
geom_hline(yintercept = dat$N2_equl_default, color = "grey60", linetype = "dashed", size = 1) +
geom_point(aes(x = parameter, y = N2_eql), position = position_jitter(width = 0.1),
color = "grey50", alpha = 0.75) +
stat_summary(aes(x = parameter, y = N2_eql), fun.y = mean,
fun.ymin = function(x) mean(x) - sd(x),
fun.ymax = function(x) mean(x) + sd(x),
geom = "pointrange", color = "red") +
labs(x = "Focal parameters", y = expression(N[2]),
title = glue::glue("Focal parameter: {pchange_focal_par}%, Non-focal parameters: ±{pchange_nonfocal_par}%")) +
scale_x_discrete(labels = x_labels[pars_order$No]) +
scale_y_continuous(expand = c(0.25, 0)) +
theme_classic() +
theme(axis.line.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text = element_text(color = "black", size = 12),
plot.title = element_text(hjust = 0.5, size = 14),
axis.title.x = element_text(size = 13, margin = margin(t = 10)),
axis.title.y = element_text(size = 13, margin = margin(r = 8)))
}
### A function for visualizing the simulation results
### Arguments:
### dat: outputs returned by BH_sensitivity_one_par()
### pchange_focal_par: percentage of increase in the focal parameter passed to BH_sensitivity_one_par()
### pchange_nonfocal_par: percentage of increase/decrease in the non-focal parameter(s) passed to BH_sensitivity_one_par()
plot_sim_one_par <- function(dat, pchange_focal_par, pchange_nonfocal_par){
# Arrange the parameters by the average N2 abundance of the simulations
pars_order <- dat$pars_sens_df %>%
group_by(parameter) %>%
summarise(mean = mean(N2_eql)) %>%
mutate(No = 1:5) %>%
arrange(desc(mean))
# Reorder the parameter levels for plotting
dat$pars_sens_df <- dat$pars_sens_df %>%
mutate(parameter = factor(parameter, level = pars_order$parameter, ordered = T))
# A vector of x-axis labels
x_labels <- c(expression(italic(alpha[21])),
expression(italic(alpha[22])),
expression(italic(g)),
expression(italic(lambda)),
expression(italic(s)))
# Plot
ggplot(data = dat$pars_sens_df) +
geom_hline(yintercept = dat$N2_equl_default, color = "grey60", linetype = "dashed", size = 1) +
geom_point(aes(x = parameter, y = N2_eql), position = position_jitter(width = 0.1),
color = "grey50", alpha = 0.75) +
stat_summary(aes(x = parameter, y = N2_eql), fun.y = mean,
fun.ymin = function(x) mean(x) - sd(x),
fun.ymax = function(x) mean(x) + sd(x),
geom = "pointrange", color = "red") +
labs(x = "Focal parameters", y = expression(N[2]),
title = glue::glue("Focal parameter: {pchange_focal_par}%, Non-focal parameters: ±{pchange_nonfocal_par}%")) +
scale_x_discrete(labels = x_labels[pars_order$No]) +
scale_y_continuous(expand = c(0.25, 0)) +
theme_classic(base_size = 8) +
theme(axis.line.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text = element_text(color = "black", size = 12),
plot.title = element_text(hjust = 0.5, size = 14),
axis.title.x = element_text(size = 13, margin = margin(t = 10)),
axis.title.y = element_text(size = 13, margin = margin(r = 8)))
}
pars_sens_plot(dat = BH_sens_20_5,
pchange_focal_par = 20,
pchange_nonfocal_par = 5)
### A function for visualizing the simulation results
### Arguments:
### dat: outputs returned by BH_sensitivity_one_par()
### pchange_focal_par: percentage of increase in the focal parameter passed to BH_sensitivity_one_par()
### pchange_nonfocal_par: percentage of increase/decrease in the non-focal parameter(s) passed to BH_sensitivity_one_par()
plot_sim_one_par <- function(dat, pchange_focal_par, pchange_nonfocal_par){
# Arrange the parameters by the average N2 abundance of the simulations
pars_order <- dat$pars_sens_df %>%
group_by(parameter) %>%
summarise(mean = mean(N2_eql)) %>%
mutate(No = 1:5) %>%
arrange(desc(mean))
# Reorder the parameter levels for plotting
dat$pars_sens_df <- dat$pars_sens_df %>%
mutate(parameter = factor(parameter, level = pars_order$parameter, ordered = T))
# A vector of x-axis labels
x_labels <- c(expression(italic(alpha[21])),
expression(italic(alpha[22])),
expression(italic(g)),
expression(italic(lambda)),
expression(italic(s)))
# Plot
ggplot(data = dat$pars_sens_df) +
geom_hline(yintercept = dat$N2_equl_default, color = "grey60", linetype = "dashed", size = 1) +
geom_point(aes(x = parameter, y = N2_eql), position = position_jitter(width = 0.1),
color = "grey50", alpha = 0.75) +
stat_summary(aes(x = parameter, y = N2_eql), fun.y = mean,
fun.ymin = function(x) mean(x) - sd(x),
fun.ymax = function(x) mean(x) + sd(x),
geom = "pointrange", color = "red") +
labs(x = "Focal parameters", y = expression(N[2]),
title = glue::glue("Focal parameter: {pchange_focal_par}%, Non-focal parameters: ±{pchange_nonfocal_par}%")) +
scale_x_discrete(labels = x_labels[pars_order$No]) +
scale_y_continuous(expand = c(0.25, 0)) +
theme_classic(base_size = 8) +
theme(axis.line.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text = element_text(color = "black", size = 12),
plot.title = element_text(hjust = 0.5, size = 10),
axis.title.x = element_text(size = 13, margin = margin(t = 10)),
axis.title.y = element_text(size = 13, margin = margin(r = 8)))
}
pars_sens_plot(dat = BH_sens_20_5,
pchange_focal_par = 20,
pchange_nonfocal_par = 5)
plot_sim_one_par(dat = BH_sens_20_5,
pchange_focal_par = 20,
pchange_nonfocal_par = 5)
### A function for visualizing the simulation results
### Arguments:
### dat: outputs returned by BH_sensitivity_one_par()
### pchange_focal_par: percentage of increase in the focal parameter passed to BH_sensitivity_one_par()
### pchange_nonfocal_par: percentage of increase/decrease in the non-focal parameter(s) passed to BH_sensitivity_one_par()
plot_sim_one_par <- function(dat, pchange_focal_par, pchange_nonfocal_par){
# Arrange the parameters by the average N2 abundance of the simulations
pars_order <- dat$pars_sens_df %>%
group_by(parameter) %>%
summarise(mean = mean(N2_eql)) %>%
mutate(No = 1:5) %>%
arrange(desc(mean))
# Reorder the parameter levels for plotting
dat$pars_sens_df <- dat$pars_sens_df %>%
mutate(parameter = factor(parameter, level = pars_order$parameter, ordered = T))
# A vector of x-axis labels
x_labels <- c(expression(italic(alpha[21])),
expression(italic(alpha[22])),
expression(italic(g)),
expression(italic(lambda)),
expression(italic(s)))
# Plot
ggplot(data = dat$pars_sens_df) +
geom_hline(yintercept = dat$N2_equl_default, color = "grey60", linetype = "dashed", size = 1) +
geom_point(aes(x = parameter, y = N2_eql), position = position_jitter(width = 0.1),
color = "grey50", alpha = 0.75) +
stat_summary(aes(x = parameter, y = N2_eql), fun.y = mean,
fun.ymin = function(x) mean(x) - sd(x),
fun.ymax = function(x) mean(x) + sd(x),
geom = "pointrange", color = "red") +
labs(x = "Focal parameters", y = expression(N[2]),
title = glue::glue("Focal parameter: {pchange_focal_par}%, Non-focal parameters: ±{pchange_nonfocal_par}%")) +
scale_x_discrete(labels = x_labels[pars_order$No]) +
scale_y_continuous(expand = c(0.25, 0)) +
theme_classic() +
theme(axis.line.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text = element_text(color = "black", size = 12),
plot.title = element_text(hjust = 0.5, size = 14),
axis.title.x = element_text(size = 13, margin = margin(t = 10)),
axis.title.y = element_text(size = 13, margin = margin(r = 8)))
}
plot_sim_one_par(dat = BH_sens_20_5,
pchange_focal_par = 20,
pchange_nonfocal_par = 5)
ggsave("./Outputs/pars_sens_plot_20_5.tiff", width = 5, height = 4, dpi = 600, device = "tiff")
### A function for visualizing the simulation results
### Arguments:
### dat: outputs returned by BH_sensitivity_one_par()
### pchange_focal_par: percentage of increase in the focal parameter passed to BH_sensitivity_one_par()
### pchange_nonfocal_par: percentage of increase/decrease in the non-focal parameter(s) passed to BH_sensitivity_one_par()
plot_sim_one_par <- function(dat, pchange_focal_par, pchange_nonfocal_par){
# Arrange the parameters by the average N2 abundance of the simulations
pars_order <- dat$pars_sens_df %>%
group_by(parameter) %>%
summarise(mean = mean(N2_eql)) %>%
mutate(No = 1:5) %>%
arrange(desc(mean))
# Reorder the parameter levels for plotting
dat$pars_sens_df <- dat$pars_sens_df %>%
mutate(parameter = factor(parameter, level = pars_order$parameter, ordered = T))
# A vector of x-axis labels
x_labels <- c(expression(italic(alpha[21])),
expression(italic(alpha[22])),
expression(italic(g)),
expression(italic(lambda)),
expression(italic(s)))
# Plot
ggplot(data = dat$pars_sens_df) +
geom_hline(yintercept = dat$N2_equl_default, color = "grey60", linetype = "dashed", size = 1) +
geom_point(aes(x = parameter, y = N2_eql), position = position_jitter(width = 0.1),
color = "grey50", alpha = 0.75) +
stat_summary(aes(x = parameter, y = N2_eql), fun.y = mean,
fun.ymin = function(x) mean(x) - sd(x),
fun.ymax = function(x) mean(x) + sd(x),
geom = "pointrange", color = "red") +
labs(x = "Focal parameters", y = expression(N[2]),
title = glue::glue("Focal parameter: {pchange_focal_par}% /n Non-focal parameters: ±{pchange_nonfocal_par}%")) +
scale_x_discrete(labels = x_labels[pars_order$No]) +
scale_y_continuous(expand = c(0.25, 0)) +
theme_classic() +
theme(axis.line.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text = element_text(color = "black", size = 12),
plot.title = element_text(hjust = 0.5, size = 14),
axis.title.x = element_text(size = 13, margin = margin(t = 10)),
axis.title.y = element_text(size = 13, margin = margin(r = 8)))
}
plot_sim_one_par(dat = BH_sens_20_5,
pchange_focal_par = 20,
pchange_nonfocal_par = 5)
ggsave("./Outputs/pars_sens_plot_20_5.tiff", width = 5, height = 4, dpi = 600, device = "tiff")
### A function for visualizing the simulation results
### Arguments:
### dat: outputs returned by BH_sensitivity_one_par()
### pchange_focal_par: percentage of increase in the focal parameter passed to BH_sensitivity_one_par()
### pchange_nonfocal_par: percentage of increase/decrease in the non-focal parameter(s) passed to BH_sensitivity_one_par()
plot_sim_one_par <- function(dat, pchange_focal_par, pchange_nonfocal_par){
# Arrange the parameters by the average N2 abundance of the simulations
pars_order <- dat$pars_sens_df %>%
group_by(parameter) %>%
summarise(mean = mean(N2_eql)) %>%
mutate(No = 1:5) %>%
arrange(desc(mean))
# Reorder the parameter levels for plotting
dat$pars_sens_df <- dat$pars_sens_df %>%
mutate(parameter = factor(parameter, level = pars_order$parameter, ordered = T))
# A vector of x-axis labels
x_labels <- c(expression(italic(alpha[21])),
expression(italic(alpha[22])),
expression(italic(g)),
expression(italic(lambda)),
expression(italic(s)))
# Plot
ggplot(data = dat$pars_sens_df) +
geom_hline(yintercept = dat$N2_equl_default, color = "grey60", linetype = "dashed", size = 1) +
geom_point(aes(x = parameter, y = N2_eql), position = position_jitter(width = 0.1),
color = "grey50", alpha = 0.75) +
stat_summary(aes(x = parameter, y = N2_eql), fun.y = mean,
fun.ymin = function(x) mean(x) - sd(x),
fun.ymax = function(x) mean(x) + sd(x),
geom = "pointrange", color = "red") +
labs(x = "Focal parameters", y = expression(N[2]),
title = glue::glue("Focal parameter: {pchange_focal_par}% \n Non-focal parameters: ±{pchange_nonfocal_par}%")) +
scale_x_discrete(labels = x_labels[pars_order$No]) +
scale_y_continuous(expand = c(0.25, 0)) +
theme_classic() +
theme(axis.line.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text = element_text(color = "black", size = 12),
plot.title = element_text(hjust = 0.5, size = 14),
axis.title.x = element_text(size = 13, margin = margin(t = 10)),
axis.title.y = element_text(size = 13, margin = margin(r = 8)))
}
plot_sim_one_par(dat = BH_sens_20_5,
pchange_focal_par = 20,
pchange_nonfocal_par = 5)
ggsave("./Outputs/pars_sens_plot_20_5.tiff", width = 5, height = 4, dpi = 600, device = "tiff")
pars_sens_plot(dat = BH_sens_40_5,
pchange_focal_par = 40,
pchange_nonfocal_par = 5)
ggsave("./Outputs/pars_sens_plot_40_5.tiff", width = 5, height = 4, dpi = 600, device = "tiff")
pars_sens_plot(dat = BH_sens_20_10,
pchange_focal_par = 20,
pchange_nonfocal_par = 10)
ggsave("./Outputs/pars_sens_plot_20_10.tiff", width = 5, height = 4, dpi = 600, device = "tiff")
pars_sens_plot(dat = BH_sens_40_20,
pchange_focal_par = 40,
pchange_nonfocal_par = 20)
ggsave("./Outputs/pars_sens_plot_40_20.tiff", width = 5, height = 4, dpi = 600, device = "tiff")
plot_sim_one_par(dat = BH_sens_20_5,
pchange_focal_par = 20,
pchange_nonfocal_par = 5)
ggsave("./Outputs/pars_sens_plot_20_5.tiff", width = 5, height = 4, dpi = 600, device = "tiff")
plot_sim_one_par(dat = BH_sens_40_5,
pchange_focal_par = 40,
pchange_nonfocal_par = 5)
ggsave("./Outputs/pars_sens_plot_40_5.tiff", width = 5, height = 4, dpi = 600, device = "tiff")
plot_sim_one_par(dat = BH_sens_20_10,
pchange_focal_par = 20,
pchange_nonfocal_par = 10)
ggsave("./Outputs/pars_sens_plot_20_10.tiff", width = 5, height = 4, dpi = 600, device = "tiff")
plot_sim_one_par(dat = BH_sens_40_20,
pchange_focal_par = 40,
pchange_nonfocal_par = 20)
ggsave("./Outputs/pars_sens_plot_40_20.tiff", width = 5, height = 4, dpi = 600, device = "tiff")
### A function for visualizing the simulation results
### Arguments:
### dat: outputs returned by BH_sensitivity_one_par()
### pchange_focal_par: percentage of increase in the focal parameter passed to BH_sensitivity_one_par()
### pchange_nonfocal_par: percentage of increase/decrease in the non-focal parameter(s) passed to BH_sensitivity_one_par()
plot_sim_one_par <- function(dat, pchange_focal_par, pchange_nonfocal_par){
# Arrange the parameters by the average N2 abundance of the simulations
pars_order <- dat$pars_sens_df %>%
group_by(parameter) %>%
summarise(mean = mean(N2_eql)) %>%
mutate(No = 1:5) %>%
arrange(desc(mean))
# Reorder the parameter levels for plotting
dat$pars_sens_df <- dat$pars_sens_df %>%
mutate(parameter = factor(parameter, level = pars_order$parameter, ordered = T))
# A vector of x-axis labels
x_labels <- c(expression(italic(alpha[21])),
expression(italic(alpha[22])),
expression(italic(g)),
expression(italic(lambda)),
expression(italic(s)))
# Plot
ggplot(data = dat$pars_sens_df) +
geom_hline(yintercept = dat$N2_equl_default, color = "grey60", linetype = "dashed", size = 1) +
geom_point(aes(x = parameter, y = N2_eql), position = position_jitter(width = 0.1),
color = "grey50", alpha = 0.75) +
stat_summary(aes(x = parameter, y = N2_eql), fun.y = mean,
fun.ymin = function(x) mean(x) - sd(x),
fun.ymax = function(x) mean(x) + sd(x),
geom = "pointrange", color = "red") +
labs(x = "Focal parameter", y = expression(N[2]),
title = glue::glue("Focal parameter: +{pchange_focal_par}% \n Non-focal parameters: ±{pchange_nonfocal_par}%")) +
scale_x_discrete(labels = x_labels[pars_order$No]) +
scale_y_continuous(expand = c(0.25, 0)) +
theme_classic() +
theme(axis.line.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text = element_text(color = "black", size = 12),
plot.title = element_text(hjust = 0.5, size = 14),
axis.title.x = element_text(size = 13, margin = margin(t = 10)),
axis.title.y = element_text(size = 13, margin = margin(r = 8)))
}
plot_sim_one_par(dat = BH_sens_20_5,
pchange_focal_par = 20,
pchange_nonfocal_par = 5)
ggsave("./Outputs/pars_sens_plot_20_5.tiff", width = 5, height = 4, dpi = 600, device = "tiff")
plot_sim_one_par(dat = BH_sens_40_5,
pchange_focal_par = 40,
pchange_nonfocal_par = 5)
ggsave("./Outputs/pars_sens_plot_40_5.tiff", width = 5, height = 4, dpi = 600, device = "tiff")
plot_sim_one_par(dat = BH_sens_20_10,
pchange_focal_par = 20,
pchange_nonfocal_par = 10)
ggsave("./Outputs/pars_sens_plot_20_10.tiff", width = 5, height = 4, dpi = 600, device = "tiff")
plot_sim_one_par(dat = BH_sens_40_20,
pchange_focal_par = 40,
pchange_nonfocal_par = 20)
ggsave("./Outputs/pars_sens_plot_40_20.tiff", width = 5, height = 4, dpi = 600, device = "tiff")
BH_sens_20_20 <- BH_sensitivity_one_par(pchange_focal_par = 20,
pchange_nonfocal_par = 20,
n_generation = 100,
n_sim = 100)
plot_sim_one_par(dat = BH_sens_20_20,
pchange_focal_par = 20,
pchange_nonfocal_par = 20)
BH_sens_20_20 <- BH_sensitivity_one_par(pchange_focal_par = 20,
pchange_nonfocal_par = 40,
n_generation = 100,
n_sim = 100)
plot_sim_one_par(dat = BH_sens_20_20,
pchange_focal_par = 20,
pchange_nonfocal_par = 20)
BH_sens_20_20 <- BH_sensitivity_one_par(pchange_focal_par = 5,
pchange_nonfocal_par = 40,
n_generation = 100,
n_sim = 100)
plot_sim_one_par(dat = BH_sens_20_20,
pchange_focal_par = 20,
pchange_nonfocal_par = 20)
library(tidyverse)
library(iNEXT)
library(readxl)
restaurant <- read_xlsx("Restaurant_visited.xlsx", sheet = 1) %>%
group_by(Restaurant) %>%
summarise(n = n())
